<?xml version="1.0" encoding="utf-8" ?>
<mvx:MvxContentPage
             xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:custom="clr-namespace:TrackYourTrip.Core.CustomControls"
             xmlns:mvx="clr-namespace:MvvmCross.Forms.Views;assembly=MvvmCross.Forms"
             xmlns:mvxBind="clr-namespace:MvvmCross.Forms.Bindings;assembly=MvvmCross.Forms"
             xmlns:converter="clr-namespace:TrackYourTrip.Core.Converters"   
             xmlns:maps="clr-namespace:Xamarin.Forms.GoogleMaps;assembly=Xamarin.Forms.GoogleMaps"   
             xmlns:other="clr-namespace:TrackYourTrip.Core.ViewModels.Other"     
             xmlns:b="clr-namespace:Prism.Behaviors;assembly=Prism.Forms"
             xmlns:ffimageloading="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
             mc:Ignorable="d"
             x:Class="TrackYourTrip.Core.Pages.NewTrip.NewFishedSpotWeatherPage"
             Title="{Binding Title}">
    <ContentPage.ToolbarItems>
        <ToolbarItem Text="{Binding SaveCommandTitle}" Order="Primary" Command="{mvxBind:MvxBind SaveCommand}" />
    </ContentPage.ToolbarItems>
    <ContentPage.Resources>
        <converter:StringToDoubleConverter x:Key="cnvStringToDoubleConverter" />
        <converter:IntToTemperatureUnitConverter x:Key="cnvIntToTemperatureUnitConverter" />
        <converter:NegateBooleanConverter x:Key="cnvNegateBooleanConverter" />
    </ContentPage.Resources>
    <ContentPage.Content>
        <AbsoluteLayout HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
            <StackLayout Style="{StaticResource RootStackLayout}" VerticalOptions="StartAndExpand" HorizontalOptions="FillAndExpand">
                <Grid HorizontalOptions="FillAndExpand" VerticalOptions="CenterAndExpand" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="45" />
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <StackLayout Orientation="Horizontal" Grid.Row="0" Grid.Column="1" HorizontalOptions="FillAndExpand" VerticalOptions="CenterAndExpand">
                        <Label Text="Werte überschreiben:" IsVisible="{Binding IsOverwritten, Converter={StaticResource cnvNegateBooleanConverter}}" />
                        <Switch IsToggled="{Binding IsOverwritten, Mode=TwoWay}"
                                IsVisible="{Binding IsOverwritten, Converter={StaticResource cnvNegateBooleanConverter}}">
                            <Switch.Behaviors>
                                <b:EventToCommandBehavior 
                                      EventName="Toggled"
                                      Command="{Binding OverwriteChangedCommand}"/>
                            </Switch.Behaviors>
                        </Switch>
                    </StackLayout>

                    <Label Text="Wetterlage :" Grid.Row="1" Grid.Column="0" VerticalOptions="CenterAndExpand" />

                    <custom:CustomPickerWithErrorLabel x:Name="WeatherConditions" 
                                                       ItemsSource="{Binding WeatherConditions}"
                                                       DisplayMemberPath="Value"
                                                       SelectedValuePath="Key"
                                                       SelectedValue="{Binding FishedSpot.Weather.WeatherSituation, Mode=TwoWay}"
                                                       HorizontalOptions="StartAndExpand"
                                                       StatusPictureIsVisible="{Binding ShowWeatherStatusPicture, Mode=TwoWay}"
                                                       StatusPicture="{Binding WheaterStatusPicture, Mode=TwoWay}"
                                                       IsEnabled="{Binding IsOverwritten}"
                                                       WidthRequest="160"
                                                       Grid.Row="1" Grid.Column="1" />

                    <Label Text="Temperatur: " Grid.Row="2" Grid.Column="0" VerticalOptions="CenterAndExpand" />

                    <custom:CustomEntryWithErrorLabel x:Name="SpotName"
                                    UserInput="{Binding FishedSpot.Weather.CurrentTemperature, Mode=TwoWay, Converter={StaticResource cnvStringToDoubleConverter}, StringFormat='{0:0.0}'}"
                                    AllowNull="True"
                                    StatusPictureIsVisible="{Binding ShowWeatherStatusPicture, Mode=TwoWay}"
                                    StatusPicture="{Binding WheaterStatusPicture, Mode=TwoWay}"
                                    AdditionalTextIsVisible="True"
                                    AdditionalText="{Binding TemperatureUnit, Converter={StaticResource cnvIntToTemperatureUnitConverter}, Mode=TwoWay}" 
                                    IsEnabled="{Binding IsOverwritten}"
                                    ErrorText=""
                                    HorizontalOptions="StartAndExpand"
                                    VerticalOptions="CenterAndExpand"
                                    Grid.Row="2"
                                    Grid.Column="1" />

                </Grid>
            </StackLayout>
            <StackLayout IsVisible="{Binding IsBusy}" Style="{StaticResource IndicatorStackLayout}">
                <ActivityIndicator IsRunning="{Binding IsBusy}" />
            </StackLayout>
        </AbsoluteLayout>
    </ContentPage.Content>
</mvx:MvxContentPage>